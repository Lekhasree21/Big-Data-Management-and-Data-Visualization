spark_df = spark_data.select('Gender', 'Age','Region_Code', 'Previously_Insured', 'Vehicle_Age', 'Vehicle_Damage', 'Annual_Premium', 'Policy_Sales_Channel', 'Vintage', ' Response')
columns = spark_df.columns
spark_data.printSchema()
spark_dfshow(3)

array_data = df_pandas_dummies.values
X = df_pandas_dummies.drop(columns=' Response').to_numpy()
X.shape
Y = df_pandas_dummies[' Response']
df_pandas_dummies.shape

Y.shape

all_models = []

all_models.append(('Logistic Regression', LogisticRegression()))
all_models.append(('Decision Tree', DecisionTreeClassifier()))
all_models.append(('Random Forest', RandomForestClassifier()))

all_models

output = []
model_name = []

to_df = []

for name, model in all_models:
	splitting = model_selection.KFold(n_splits=10, random_state=7)
	calculation = model_selection.cross_val_score(model, X, Y, cv=splitting, scoring='accuracy')
	output.append(calculation)
	model_name.append(name)
	result = "%s: %f: %f" % (name, calculation.mean(), calculation.std())
	to_df.append(result)
	print(result)

to_df

print(output)

output[0]

from pandas import DataFrame

to_dataframe = DataFrame (to_df)
to_dataframe

to_csv = to_dataframe[0].to_csv("/home/lekhasree/Desktop/Insurance/model_prediction.csv", encoding="UTF-8", header= False)
